"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/setup/route";
exports.ids = ["app/api/setup/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsetup%2Froute&page=%2Fapi%2Fsetup%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsetup%2Froute.ts&appDir=%2FUsers%2Fbanik%2FDesktop%2FProjects2025%2FBMarkApp-NextJS%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbanik%2FDesktop%2FProjects2025%2FBMarkApp-NextJS&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsetup%2Froute&page=%2Fapi%2Fsetup%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsetup%2Froute.ts&appDir=%2FUsers%2Fbanik%2FDesktop%2FProjects2025%2FBMarkApp-NextJS%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbanik%2FDesktop%2FProjects2025%2FBMarkApp-NextJS&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_banik_Desktop_Projects2025_BMarkApp_NextJS_app_api_setup_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/setup/route.ts */ \"(rsc)/./app/api/setup/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/setup/route\",\n        pathname: \"/api/setup\",\n        filename: \"route\",\n        bundlePath: \"app/api/setup/route\"\n    },\n    resolvedPagePath: \"/Users/banik/Desktop/Projects2025/BMarkApp-NextJS/app/api/setup/route.ts\",\n    nextConfigOutput,\n    userland: _Users_banik_Desktop_Projects2025_BMarkApp_NextJS_app_api_setup_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/setup/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzZXR1cCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGc2V0dXAlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZzZXR1cCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmJhbmlrJTJGRGVza3RvcCUyRlByb2plY3RzMjAyNSUyRkJNYXJrQXBwLU5leHRKUyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZiYW5payUyRkRlc2t0b3AlMkZQcm9qZWN0czIwMjUlMkZCTWFya0FwcC1OZXh0SlMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3dCO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGxtLWNvbnNlbnN1cy1iZW5jaG1hcmstbmV4dGpzLz9iODAzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9iYW5pay9EZXNrdG9wL1Byb2plY3RzMjAyNS9CTWFya0FwcC1OZXh0SlMvYXBwL2FwaS9zZXR1cC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc2V0dXAvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zZXR1cFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc2V0dXAvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvYmFuaWsvRGVza3RvcC9Qcm9qZWN0czIwMjUvQk1hcmtBcHAtTmV4dEpTL2FwcC9hcGkvc2V0dXAvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3NldHVwL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsetup%2Froute&page=%2Fapi%2Fsetup%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsetup%2Froute.ts&appDir=%2FUsers%2Fbanik%2FDesktop%2FProjects2025%2FBMarkApp-NextJS%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbanik%2FDesktop%2FProjects2025%2FBMarkApp-NextJS&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/setup/route.ts":
/*!********************************!*\
  !*** ./app/api/setup/route.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./lib/supabase.ts\");\n\n\n// Helper function to get Supabase credentials from environment or headers\nfunction getSupabaseCredentials(request) {\n    // First try environment variables (for production)\n    const envUrl = \"https://rhwjusutkkwxypbqaoph.supabase.co\";\n    const envKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJod2p1c3V0a2t3eHlwYnFhb3BoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4ODEzNjAsImV4cCI6MjA2MzQ1NzM2MH0.4cYuDuaZyxfG7T1lkkiLttDehiYg9LdWKwEq1tPLkXM\";\n    if (envUrl && envKey) {\n        return {\n            url: envUrl,\n            key: envKey\n        };\n    }\n    // Fall back to request headers (for development with settings page)\n    if (request) {\n        const headerUrl = request.headers.get(\"X-Supabase-URL\");\n        const headerKey = request.headers.get(\"X-Supabase-Key\");\n        if (headerUrl && headerKey) {\n            return {\n                url: headerUrl,\n                key: headerKey\n            };\n        }\n    }\n    return {\n        url: envUrl || null,\n        key: envKey || null\n    };\n}\n// Database schema setup SQL\nconst SCHEMA_SQL = `\n-- Enable necessary extensions\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\n-- Models table\nCREATE TABLE IF NOT EXISTS models (\n    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    provider VARCHAR(100) NOT NULL,\n    model_id VARCHAR(255) UNIQUE NOT NULL,\n    enabled BOOLEAN DEFAULT true,\n    context_length INTEGER DEFAULT 4096,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Prompts table\nCREATE TABLE IF NOT EXISTS prompts (\n    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\n    text TEXT NOT NULL,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Responses table\nCREATE TABLE IF NOT EXISTS responses (\n    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\n    prompt_id UUID REFERENCES prompts(id) ON DELETE CASCADE,\n    model_id UUID REFERENCES models(id) ON DELETE CASCADE,\n    response_text TEXT NOT NULL,\n    response_time_ms INTEGER NOT NULL,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Consensus groups table\nCREATE TABLE IF NOT EXISTS consensus_groups (\n    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\n    prompt_id UUID REFERENCES prompts(id) ON DELETE CASCADE,\n    group_name TEXT NOT NULL,\n    count INTEGER NOT NULL,\n    percentage DECIMAL(5,2),\n    color VARCHAR(7) NOT NULL,\n    models TEXT[],\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Create indexes for better performance\nCREATE INDEX IF NOT EXISTS idx_models_model_id ON models(model_id);\nCREATE INDEX IF NOT EXISTS idx_models_enabled ON models(enabled);\nCREATE INDEX IF NOT EXISTS idx_responses_prompt_id ON responses(prompt_id);\nCREATE INDEX IF NOT EXISTS idx_responses_model_id ON responses(model_id);\nCREATE INDEX IF NOT EXISTS idx_consensus_groups_prompt_id ON consensus_groups(prompt_id);\nCREATE INDEX IF NOT EXISTS idx_prompts_created_at ON prompts(created_at DESC);\n\n-- Enable Row Level Security (RLS)\nALTER TABLE models ENABLE ROW LEVEL SECURITY;\nALTER TABLE prompts ENABLE ROW LEVEL SECURITY;\nALTER TABLE responses ENABLE ROW LEVEL SECURITY;\nALTER TABLE consensus_groups ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for public access\nCREATE POLICY \"Enable read access for all users\" ON models FOR SELECT USING (true);\nCREATE POLICY \"Enable insert access for all users\" ON models FOR INSERT WITH CHECK (true);\nCREATE POLICY \"Enable update access for all users\" ON models FOR UPDATE USING (true);\nCREATE POLICY \"Enable delete access for all users\" ON models FOR DELETE USING (true);\n\nCREATE POLICY \"Enable read access for all users\" ON prompts FOR SELECT USING (true);\nCREATE POLICY \"Enable insert access for all users\" ON prompts FOR INSERT WITH CHECK (true);\nCREATE POLICY \"Enable update access for all users\" ON prompts FOR UPDATE USING (true);\nCREATE POLICY \"Enable delete access for all users\" ON prompts FOR DELETE USING (true);\n\nCREATE POLICY \"Enable read access for all users\" ON responses FOR SELECT USING (true);\nCREATE POLICY \"Enable insert access for all users\" ON responses FOR INSERT WITH CHECK (true);\nCREATE POLICY \"Enable update access for all users\" ON responses FOR UPDATE USING (true);\nCREATE POLICY \"Enable delete access for all users\" ON responses FOR DELETE USING (true);\n\nCREATE POLICY \"Enable read access for all users\" ON consensus_groups FOR SELECT USING (true);\nCREATE POLICY \"Enable insert access for all users\" ON consensus_groups FOR INSERT WITH CHECK (true);\nCREATE POLICY \"Enable update access for all users\" ON consensus_groups FOR UPDATE USING (true);\nCREATE POLICY \"Enable delete access for all users\" ON consensus_groups FOR DELETE USING (true);\n\n-- Create updated_at trigger function\nCREATE OR REPLACE FUNCTION update_updated_at_column()\nRETURNS TRIGGER AS $$\nBEGIN\n    NEW.updated_at = NOW();\n    RETURN NEW;\nEND;\n$$ language 'plpgsql';\n\n-- Create triggers for updated_at\nCREATE TRIGGER update_models_updated_at BEFORE UPDATE ON models FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();\nCREATE TRIGGER update_prompts_updated_at BEFORE UPDATE ON prompts FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();\n\n-- Insert some example data\nINSERT INTO models (name, provider, model_id, enabled, context_length) VALUES\n    ('GPT-4o', 'OpenAI', 'openai/gpt-4o', true, 128000),\n    ('Claude 3.5 Sonnet', 'Anthropic', 'anthropic/claude-3-5-sonnet', true, 200000),\n    ('Gemini Pro 1.5', 'Google', 'google/gemini-pro-1.5', true, 2000000)\nON CONFLICT (model_id) DO NOTHING;\n`;\n// GET: Check database setup status\nasync function GET(request) {\n    try {\n        const credentials = getSupabaseCredentials(request);\n        if (!credentials.url || !credentials.key) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Supabase credentials not configured. Please set them in environment variables or via the settings page.\"\n            }, {\n                status: 400\n            });\n        }\n        // Try to query the models table to check if setup is complete\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"models\").select(\"id\").limit(1);\n        if (error) {\n            // If there's an error, it likely means tables don't exist\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                setupRequired: true,\n                error: error.message,\n                message: \"Database tables need to be created\"\n            });\n        }\n        // Get actual count\n        const { count } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"models\").select(\"*\", {\n            count: \"exact\",\n            head: true\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            setupRequired: false,\n            message: \"Database is already set up\",\n            modelCount: count || 0\n        });\n    } catch (error) {\n        console.error(\"Error checking database setup:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error instanceof Error ? error.message : \"Failed to check database setup\"\n        }, {\n            status: 500\n        });\n    }\n}\n// POST: Run database setup\nasync function POST(request) {\n    try {\n        const credentials = getSupabaseCredentials(request);\n        if (!credentials.url || !credentials.key) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Supabase credentials not configured. Please set them in environment variables or via the settings page.\"\n            }, {\n                status: 400\n            });\n        }\n        // Execute the schema SQL\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.rpc(\"exec_sql\", {\n            sql_query: SCHEMA_SQL\n        });\n        if (error) {\n            // If rpc doesn't work, try direct execution\n            console.log(\"RPC failed, trying direct execution:\", error);\n            // Split SQL into individual statements and execute them\n            const statements = SCHEMA_SQL.split(\";\").map((stmt)=>stmt.trim()).filter((stmt)=>stmt.length > 0);\n            const results = [];\n            let hasError = false;\n            for (const statement of statements){\n                try {\n                    const { data: result, error: stmtError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"_temp_setup\").select(\"*\").limit(0) // This will fail but allows us to test connection\n                    ;\n                    if (stmtError && !hasError) {\n                        hasError = true;\n                        break;\n                    }\n                    results.push({\n                        statement: statement.substring(0, 50) + \"...\",\n                        success: true\n                    });\n                } catch (e) {\n                    results.push({\n                        statement: statement.substring(0, 50) + \"...\",\n                        success: false,\n                        error: e\n                    });\n                    break;\n                }\n            }\n            if (hasError) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Failed to execute database setup. Please run the SQL manually in your Supabase dashboard.\",\n                    sqlFile: \"/database/schema.sql\",\n                    instructions: \"Copy the contents of database/schema.sql and run it in your Supabase SQL Editor\"\n                }, {\n                    status: 500\n                });\n            }\n        }\n        // Verify setup by checking if we can query models\n        const { data: models, error: verifyError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"models\").select(\"id\").limit(1);\n        if (verifyError) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Database setup may have failed. Please run the SQL manually.\",\n                sqlFile: \"/database/schema.sql\",\n                instructions: \"Copy the contents of database/schema.sql and run it in your Supabase SQL Editor\"\n            }, {\n                status: 500\n            });\n        }\n        // Get actual count\n        const { count } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from(\"models\").select(\"*\", {\n            count: \"exact\",\n            head: true\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Database setup completed successfully!\",\n            modelCount: count || 0,\n            tablesCreated: [\n                \"models\",\n                \"prompts\",\n                \"responses\",\n                \"consensus_groups\"\n            ]\n        });\n    } catch (error) {\n        console.error(\"Error setting up database:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to set up database automatically. Please run the SQL manually.\",\n            sqlFile: \"/database/schema.sql\",\n            instructions: \"Copy the contents of database/schema.sql and run it in your Supabase SQL Editor\",\n            details: error instanceof Error ? error.message : \"Unknown error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/setup/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupabaseClient: () => (/* binding */ SupabaseClient),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   supabaseClient: () => (/* binding */ supabaseClient)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://rhwjusutkkwxypbqaoph.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJod2p1c3V0a2t3eHlwYnFhb3BoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4ODEzNjAsImV4cCI6MjA2MzQ1NzM2MH0.4cYuDuaZyxfG7T1lkkiLttDehiYg9LdWKwEq1tPLkXM\";\nif (!supabaseUrl || !supabaseAnonKey) {\n    throw new Error(\"Missing Supabase environment variables\");\n}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Supabase client with enhanced error handling\nclass SupabaseClient {\n    async getModels() {\n        try {\n            const { data, error } = await this.client.from(\"models\").select(\"*\").order(\"provider\", {\n                ascending: true\n            }).order(\"name\", {\n                ascending: true\n            });\n            if (error) {\n                throw new Error(`Failed to fetch models: ${error.message}`);\n            }\n            return data || [];\n        } catch (error) {\n            console.error(\"Error fetching models:\", error);\n            throw error;\n        }\n    }\n    async updateModelEnabled(id, enabled) {\n        try {\n            const { data, error } = await this.client.from(\"models\").update({\n                enabled,\n                updated_at: new Date().toISOString()\n            }).eq(\"id\", id).select().single();\n            if (error) {\n                throw new Error(`Failed to update model: ${error.message}`);\n            }\n            return data;\n        } catch (error) {\n            console.error(\"Error updating model:\", error);\n            throw error;\n        }\n    }\n    async upsertModels(models) {\n        try {\n            const { data, error } = await this.client.from(\"models\").upsert(models, {\n                onConflict: \"model_id\"\n            }).select();\n            if (error) {\n                throw new Error(`Failed to upsert models: ${error.message}`);\n            }\n            return data || [];\n        } catch (error) {\n            console.error(\"Error upserting models:\", error);\n            throw error;\n        }\n    }\n    async savePrompt(text) {\n        try {\n            const { data, error } = await this.client.from(\"prompts\").insert({\n                text\n            }).select().single();\n            if (error) {\n                throw new Error(`Failed to save prompt: ${error.message}`);\n            }\n            return data;\n        } catch (error) {\n            console.error(\"Error saving prompt:\", error);\n            throw error;\n        }\n    }\n    async saveResponses(responses) {\n        try {\n            const { data, error } = await this.client.from(\"responses\").insert(responses).select(`\n          *,\n          model:models(*)\n        `);\n            if (error) {\n                throw new Error(`Failed to save responses: ${error.message}`);\n            }\n            return data || [];\n        } catch (error) {\n            console.error(\"Error saving responses:\", error);\n            throw error;\n        }\n    }\n    async saveConsensusGroups(groups) {\n        try {\n            const { data, error } = await this.client.from(\"consensus_groups\").insert(groups).select();\n            if (error) {\n                throw new Error(`Failed to save consensus groups: ${error.message}`);\n            }\n            return data || [];\n        } catch (error) {\n            console.error(\"Error saving consensus groups:\", error);\n            throw error;\n        }\n    }\n    async getPromptHistory(limit = 50) {\n        try {\n            const { data, error } = await this.client.from(\"prompts\").select(\"*\").order(\"created_at\", {\n                ascending: false\n            }).limit(limit);\n            if (error) {\n                throw new Error(`Failed to fetch prompt history: ${error.message}`);\n            }\n            return data || [];\n        } catch (error) {\n            console.error(\"Error fetching prompt history:\", error);\n            throw error;\n        }\n    }\n    async getPromptWithResults(promptId) {\n        try {\n            const [promptResult, responsesResult, consensusResult] = await Promise.all([\n                this.client.from(\"prompts\").select(\"*\").eq(\"id\", promptId).single(),\n                this.client.from(\"responses\").select(`\n          *,\n          model:models(*)\n        `).eq(\"prompt_id\", promptId),\n                this.client.from(\"consensus_groups\").select(\"*\").eq(\"prompt_id\", promptId)\n            ]);\n            if (promptResult.error) {\n                throw new Error(`Failed to fetch prompt: ${promptResult.error.message}`);\n            }\n            return {\n                prompt: promptResult.data,\n                responses: responsesResult.data || [],\n                consensusGroups: consensusResult.data || []\n            };\n        } catch (error) {\n            console.error(\"Error fetching prompt with results:\", error);\n            throw error;\n        }\n    }\n    constructor(){\n        this.client = supabase;\n    }\n}\nconst supabaseClient = new SupabaseClient();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/whatwg-url","vendor-chunks/tr46"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsetup%2Froute&page=%2Fapi%2Fsetup%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsetup%2Froute.ts&appDir=%2FUsers%2Fbanik%2FDesktop%2FProjects2025%2FBMarkApp-NextJS%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fbanik%2FDesktop%2FProjects2025%2FBMarkApp-NextJS&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();